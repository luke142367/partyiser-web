{"version":3,"sources":["UploadForm.tsx","App.tsx","index.tsx"],"names":["UploadForm","React","image","setImage","responseURL","setResponseURL","loading","setLoading","trans","setTrans","className","type","onChange","e","target","files","length","t","checked","width","onClick","preventDefault","targetImage","data","FormData","append","url","fetch","method","body","then","res","json","sendConvertRequest","href","download","alt","id","src","App","ReactDOM","render","document","getElementById"],"mappings":"8PAwEeA,EAlE8C,WAAO,IAAD,EACvCC,aADuC,mBAC1DC,EAD0D,KACnDC,EADmD,OAE3BF,WAAuB,IAFI,mBAE1DG,EAF0D,KAE7CC,EAF6C,OAGnCJ,YAAwB,GAHW,mBAG1DK,EAH0D,KAGjDC,EAHiD,OAIvCN,YAAwB,GAJe,mBAI1DO,EAJ0D,KAInDC,EAJmD,KAsCjE,OACE,2BACE,wBAAMC,UAAU,QACd,uBAAKA,UAAU,oBACb,yBAAOC,KAAK,OAAOD,UAAU,eAAeE,SApChC,SAACC,GACfA,EAAEC,OAAOC,OAASF,EAAEC,OAAOC,MAAMC,OAAS,GAC5Cb,EAASU,EAAEC,OAAOC,MAAM,SAqCxB,uBAAKL,UAAU,eACb,yCACA,yBAAOC,KAAK,WAAWC,SAbf,WACZH,GAAS,SAACQ,GAAD,OAAQA,MAY2BC,QAASV,IACjD,2BAEMF,EACI,gBAAC,YAAD,CAAWA,QAASA,EAASa,MAAO,MACpC,0BAAQR,KAAK,SAASD,UAAU,WAAWU,QAzBtC,SAACP,GACpBA,EAAEQ,iBACGnB,IACLK,GAAW,GAlBc,SAACe,GAC1B,IAAMC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,QAASH,GACrB,IAAII,EAAM,8CACVA,GAAG,iBAAclB,GACjBmB,MAAMD,EAAK,CACTE,OAAQ,OACRC,KAAMN,IACLO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL1B,EAAe0B,EAAIL,KACnBnB,GAAW,MAQf0B,CAAmB/B,MAqBL,oBAGVE,GAEE,qBAAG8B,KAAI,UAAK9B,EAAL,kBAAkC+B,SAAS,aAChD,uBAAKC,IAAI,SAASC,GAAG,YAAYC,IAAKlC,OCnDnCmC,MATf,WACE,OACE,uBAAK7B,UAAU,OACb,sBAAI2B,GAAG,SAAP,aACA,gBAAC,EAAD,QCHNG,IAASC,OAAO,gBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.155e7d59.chunk.js","sourcesContent":["import * as React from 'react'\nimport './UploadForm.css'\nimport { BarLoader } from 'react-spinners'\n\ninterface UploadFormProps {}\n\nconst UploadForm: React.FunctionComponent<UploadFormProps> = () => {\n  const [image, setImage] = React.useState<File>()\n  const [responseURL, setResponseURL] = React.useState<string>('')\n  const [loading, setLoading] = React.useState<boolean>(false)\n  const [trans, setTrans] = React.useState<boolean>(false)\n\n  const changeImage = (e:React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setImage(e.target.files[0])\n    }\n  }\n\n  const sendConvertRequest = (targetImage: File) => {\n    const data = new FormData()\n    data.append('image', targetImage)\n    let url = 'https://partyiser-api.herokuapp.com/convert'\n    url += `?trans=${trans}`\n    fetch(url, {\n      method: 'POST',\n      body: data,\n    }).then((res) => res.json())\n      .then((res) => {\n        setResponseURL(res.url)\n        setLoading(false)\n      })\n  }\n\n  const convertImage = (e:React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    if (!image) return\n    setLoading(true)\n    sendConvertRequest(image)\n  }\n\n  const check = () => {\n    setTrans((t) => !t)\n  }\n\n  return (\n    <div>\n      <form className=\"form\">\n        <div className=\"form-group files\">\n          <input type=\"file\" className=\"form-control\" onChange={changeImage} />\n        </div>\n      </form>\n      <div className=\"centreWidth\">\n        <p>Transparency</p>\n        <input type=\"checkbox\" onChange={check} checked={trans} />\n        <br />\n        {\n              loading\n                ? <BarLoader loading={loading} width={400} />\n                : <button type=\"button\" className=\"partyBtn\" onClick={convertImage}>Partyise Image!</button>\n            }\n      </div>\n      { responseURL\n          && (\n          <a href={`${responseURL}?download=true`} download=\"party.gif\">\n            <img alt=\"result\" id=\"resultImg\" src={responseURL} />\n          </a>\n          )}\n\n    </div>\n  )\n}\n\nexport default UploadForm\n","import * as React from 'react'\nimport './App.css'\nimport UploadForm from './UploadForm'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 id=\"title\">Partyiser</h1>\n      <UploadForm />\n    </div>\n  )\n}\n\nexport default App\n","import * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}